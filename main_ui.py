# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(798, 723)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(798, 723))
        MainWindow.setMaximumSize(QtCore.QSize(798, 723))
        MainWindow.setStyleSheet("/* Regular state */\n"
"QPushButton {\n"
"    background-color: #C7E5C9; /* Green background */\n"
"    border-radius: 5px;\n"
"    border: 1px solid black;\n"
"}\n"
"\n"
"/* Hover state */\n"
"QPushButton:hover {\n"
"    background-color: #A4CFA5; /* Darker green background on hover */\n"
"}\n"
"\n"
"/* Disabled state */\n"
"QPushButton:disabled {\n"
"    background-color: #E5E5E5; /* Light grey background for disabled state */\n"
"    border: 1px solid #BBBBBB; /* Light grey border for disabled state */\n"
"    color: #999999; /* Light grey text for disabled state */\n"
"}\n"
"\n"
"QListWidget {\n"
"    border: 1px solid #AAAAAA;\n"
"    padding: 1px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"#previewMergeNextButton, #previewMergeBackButton, #previewModNextButton, #previewModBackButton{\n"
"    border: 1px solid #C0C0C0;\n"
"    background-color: rgba(255, 255, 255, 0.5)\n"
"}\n"
"#previewMergeNextButton:hover, #previewMergeBackButton:hover, #previewModNextButton:hover, #previewModBackButton:hover{\n"
"    border: 1px solid #AAAAAA;\n"
"    background-color: rgba(255, 255, 255, 0.75)\n"
"}\n"
"\n"
"QListWidget::item {\n"
"    padding: 2px;\n"
"    margin: 2px; \n"
"    border: 1px solid rgba(0,0,0,0.2);\n"
"}\n"
"QListWidget::item:selected{\n"
"  background-color: rgba(0,0,0, 0.15);\n"
"  color: black;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background: lightgray; \n"
"    border: 1px solid gray;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.logTextEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.logTextEdit.setGeometry(QtCore.QRect(30, 530, 745, 151))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.logTextEdit.setFont(font)
        self.logTextEdit.setStyleSheet("")
        self.logTextEdit.setReadOnly(True)
        self.logTextEdit.setObjectName("logTextEdit")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(20, 10, 771, 491))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.tabWidget.setFont(font)
        self.tabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.tabWidget.setStyleSheet("QTabWidget::pane { /* The tab widget frame */\n"
"    border-top: 2px solid #C2C7CB;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background: #EEEEEE;\n"
"    color: #4F4F4F;\n"
"    border: 1px solid #C4C4C3;\n"
"    border-bottom-color: #C2C7CB; /* same as the pane color */\n"
"    border-top-left-radius: 4px;\n"
"    border-top-right-radius: 4px;\n"
"    min-width: 8ex;\n"
"    padding:3px 5px;\n"
"    margin: 0 1px;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background: #C7E5C9;;\n"
"    color: #000000;\n"
"    border-color: #9B9B9B;\n"
"    border-bottom-color: #C2C7CB; /* same as the pane color */\n"
"}\n"
"\n"
"QTabBar::tab:!selected:hover {\n"
"    background: #DDE8DD;\n"
"    color: #4F4F4F;\n"
"}\n"
"")
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setObjectName("tabWidget")
        self.manageTab = QtWidgets.QWidget()
        self.manageTab.setObjectName("manageTab")
        self.refreshModsButton = QtWidgets.QPushButton(self.manageTab)
        self.refreshModsButton.setGeometry(QtCore.QRect(310, 230, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.refreshModsButton.setFont(font)
        self.refreshModsButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.refreshModsButton.setObjectName("refreshModsButton")
        self.removeModButton = QtWidgets.QPushButton(self.manageTab)
        self.removeModButton.setGeometry(QtCore.QRect(30, 230, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.removeModButton.setFont(font)
        self.removeModButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.removeModButton.setAutoFillBackground(False)
        self.removeModButton.setStyleSheet("QPushButton{\n"
"    background-color: #F39F95;\n"
"}\n"
"QPushButton:hover{\n"
"    background-color: #D98174;\n"
"}")
        self.removeModButton.setObjectName("removeModButton")
        self.enabledModList = QtWidgets.QListWidget(self.manageTab)
        self.enabledModList.setGeometry(QtCore.QRect(20, 40, 256, 171))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.enabledModList.setFont(font)
        self.enabledModList.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.enabledModList.setStyleSheet("background: #EEFFEE")
        self.enabledModList.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.enabledModList.setObjectName("enabledModList")
        self.disabledModList = QtWidgets.QListWidget(self.manageTab)
        self.disabledModList.setGeometry(QtCore.QRect(20, 290, 256, 171))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.disabledModList.setFont(font)
        self.disabledModList.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.disabledModList.setStyleSheet("background: #FFEEEE")
        self.disabledModList.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.disabledModList.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.disabledModList.setObjectName("disabledModList")
        self.disabledLabel = QtWidgets.QLabel(self.manageTab)
        self.disabledLabel.setGeometry(QtCore.QRect(98, 266, 100, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setKerning(True)
        self.disabledLabel.setFont(font)
        self.disabledLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.disabledLabel.setObjectName("disabledLabel")
        self.addModButton = QtWidgets.QPushButton(self.manageTab)
        self.addModButton.setGeometry(QtCore.QRect(195, 230, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.addModButton.setFont(font)
        self.addModButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.addModButton.setAutoFillBackground(False)
        self.addModButton.setStyleSheet("QPushButton{\n"
"    background-color: #7AE1A5;\n"
"}\n"
"QPushButton:hover{\n"
"    background-color: #61C88B;\n"
"}")
        self.addModButton.setObjectName("addModButton")
        self.previewModGroupBox = QtWidgets.QGroupBox(self.manageTab)
        self.previewModGroupBox.setGeometry(QtCore.QRect(480, 140, 275, 321))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.previewModGroupBox.setFont(font)
        self.previewModGroupBox.setStyleSheet("")
        self.previewModGroupBox.setObjectName("previewModGroupBox")
        self.previewModLabel = QtWidgets.QLabel(self.previewModGroupBox)
        self.previewModLabel.setGeometry(QtCore.QRect(10, 20, 256, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.previewModLabel.setFont(font)
        self.previewModLabel.setObjectName("previewModLabel")
        self.previewModImage = QtWidgets.QGraphicsView(self.previewModGroupBox)
        self.previewModImage.setGeometry(QtCore.QRect(10, 50, 256, 256))
        self.previewModImage.setMinimumSize(QtCore.QSize(256, 0))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.previewModImage.setFont(font)
        self.previewModImage.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.previewModImage.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.previewModImage.setObjectName("previewModImage")
        self.previewModNextButton = QtWidgets.QPushButton(self.previewModGroupBox)
        self.previewModNextButton.setGeometry(QtCore.QRect(240, 160, 21, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.previewModNextButton.setFont(font)
        self.previewModNextButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.previewModNextButton.setStyleSheet("")
        self.previewModNextButton.setObjectName("previewModNextButton")
        self.previewModBackButton = QtWidgets.QPushButton(self.previewModGroupBox)
        self.previewModBackButton.setGeometry(QtCore.QRect(15, 160, 21, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.previewModBackButton.setFont(font)
        self.previewModBackButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.previewModBackButton.setStyleSheet("")
        self.previewModBackButton.setObjectName("previewModBackButton")
        self.patchButton = QtWidgets.QPushButton(self.manageTab)
        self.patchButton.setGeometry(QtCore.QRect(490, 80, 255, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.patchButton.setFont(font)
        self.patchButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.patchButton.setObjectName("patchButton")
        self.label = QtWidgets.QLabel(self.manageTab)
        self.label.setGeometry(QtCore.QRect(490, 10, 251, 61))
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.enabledLabel_2 = QtWidgets.QLabel(self.manageTab)
        self.enabledLabel_2.setGeometry(QtCore.QRect(98, 17, 100, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setKerning(True)
        self.enabledLabel_2.setFont(font)
        self.enabledLabel_2.setAlignment(QtCore.Qt.AlignCenter)
        self.enabledLabel_2.setObjectName("enabledLabel_2")
        self.mergeNoticeTextEdit_2 = QtWidgets.QTextEdit(self.manageTab)
        self.mergeNoticeTextEdit_2.setGeometry(QtCore.QRect(290, 20, 171, 191))
        self.mergeNoticeTextEdit_2.setStyleSheet("background: #E0E0E0")
        self.mergeNoticeTextEdit_2.setReadOnly(True)
        self.mergeNoticeTextEdit_2.setObjectName("mergeNoticeTextEdit_2")
        self.IconGraphicsView = QtWidgets.QGraphicsView(self.manageTab)
        self.IconGraphicsView.setGeometry(QtCore.QRect(288, 287, 175, 175))
        self.IconGraphicsView.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.IconGraphicsView.setObjectName("IconGraphicsView")
        self.tabWidget.addTab(self.manageTab, "")
        self.mergeTab = QtWidgets.QWidget()
        self.mergeTab.setObjectName("mergeTab")
        self.scriptFlagsGBox = QtWidgets.QGroupBox(self.mergeTab)
        self.scriptFlagsGBox.setGeometry(QtCore.QRect(10, 20, 741, 111))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.scriptFlagsGBox.setFont(font)
        self.scriptFlagsGBox.setStyleSheet("#scriptFlagsGBox .QCheckBox{\n"
"    padding: 0 4px ;\n"
"}\n"
"\n"
"#scriptFlagsGBox *:checked{\n"
"    background: #C7E5C9;\n"
"}")
        self.scriptFlagsGBox.setObjectName("scriptFlagsGBox")
        self.reflectionFlagCheckBox = QtWidgets.QCheckBox(self.scriptFlagsGBox)
        self.reflectionFlagCheckBox.setEnabled(False)
        self.reflectionFlagCheckBox.setGeometry(QtCore.QRect(390, 80, 85, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.reflectionFlagCheckBox.setFont(font)
        self.reflectionFlagCheckBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.reflectionFlagCheckBox.setChecked(False)
        self.reflectionFlagCheckBox.setObjectName("reflectionFlagCheckBox")
        self.storeFlagCheckBox = QtWidgets.QCheckBox(self.scriptFlagsGBox)
        self.storeFlagCheckBox.setGeometry(QtCore.QRect(300, 80, 62, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.storeFlagCheckBox.setFont(font)
        self.storeFlagCheckBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.storeFlagCheckBox.setStyleSheet("")
        self.storeFlagCheckBox.setChecked(False)
        self.storeFlagCheckBox.setObjectName("storeFlagCheckBox")
        self.enabledFlagCheckBox = QtWidgets.QCheckBox(self.scriptFlagsGBox)
        self.enabledFlagCheckBox.setGeometry(QtCore.QRect(204, 80, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.enabledFlagCheckBox.setFont(font)
        self.enabledFlagCheckBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.enabledFlagCheckBox.setChecked(False)
        self.enabledFlagCheckBox.setObjectName("enabledFlagCheckBox")
        self.swapKeyLineEdit = QtWidgets.QLineEdit(self.scriptFlagsGBox)
        self.swapKeyLineEdit.setGeometry(QtCore.QRect(82, 20, 64, 20))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.swapKeyLineEdit.setFont(font)
        self.swapKeyLineEdit.setInputMask("")
        self.swapKeyLineEdit.setMaxLength(1)
        self.swapKeyLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.swapKeyLineEdit.setObjectName("swapKeyLineEdit")
        self.compressFlagCheckBox = QtWidgets.QCheckBox(self.scriptFlagsGBox)
        self.compressFlagCheckBox.setGeometry(QtCore.QRect(100, 80, 86, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.compressFlagCheckBox.setFont(font)
        self.compressFlagCheckBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.compressFlagCheckBox.setChecked(False)
        self.compressFlagCheckBox.setObjectName("compressFlagCheckBox")
        self.activeFlagCheckBox = QtWidgets.QCheckBox(self.scriptFlagsGBox)
        self.activeFlagCheckBox.setEnabled(False)
        self.activeFlagCheckBox.setGeometry(QtCore.QRect(10, 80, 67, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.activeFlagCheckBox.setFont(font)
        self.activeFlagCheckBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.activeFlagCheckBox.setChecked(True)
        self.activeFlagCheckBox.setObjectName("activeFlagCheckBox")
        self.swapKeyLabel = QtWidgets.QLabel(self.scriptFlagsGBox)
        self.swapKeyLabel.setGeometry(QtCore.QRect(10, 20, 73, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.swapKeyLabel.setFont(font)
        self.swapKeyLabel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.swapKeyLabel.setObjectName("swapKeyLabel")
        self.mergeNameLineEdit = QtWidgets.QLineEdit(self.scriptFlagsGBox)
        self.mergeNameLineEdit.setGeometry(QtCore.QRect(260, 20, 261, 20))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.mergeNameLineEdit.setFont(font)
        self.mergeNameLineEdit.setInputMask("")
        self.mergeNameLineEdit.setMaxLength(32767)
        self.mergeNameLineEdit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.mergeNameLineEdit.setObjectName("mergeNameLineEdit")
        self.mergeNameLabel = QtWidgets.QLabel(self.scriptFlagsGBox)
        self.mergeNameLabel.setGeometry(QtCore.QRect(148, 20, 113, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.mergeNameLabel.setFont(font)
        self.mergeNameLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.mergeNameLabel.setObjectName("mergeNameLabel")
        self.mergeSuffixLabel = QtWidgets.QLabel(self.scriptFlagsGBox)
        self.mergeSuffixLabel.setGeometry(QtCore.QRect(520, 20, 21, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.mergeSuffixLabel.setFont(font)
        self.mergeSuffixLabel.setToolTip("")
        self.mergeSuffixLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.mergeSuffixLabel.setObjectName("mergeSuffixLabel")
        self.mergeModsButton = QtWidgets.QPushButton(self.scriptFlagsGBox)
        self.mergeModsButton.setEnabled(True)
        self.mergeModsButton.setGeometry(QtCore.QRect(570, 30, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.mergeModsButton.setFont(font)
        self.mergeModsButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.mergeModsButton.setObjectName("mergeModsButton")
        self.mergeDirLabel = QtWidgets.QLabel(self.scriptFlagsGBox)
        self.mergeDirLabel.setGeometry(QtCore.QRect(10, 50, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.mergeDirLabel.setFont(font)
        self.mergeDirLabel.setObjectName("mergeDirLabel")
        self.mergeDirLineEdit = QtWidgets.QLineEdit(self.scriptFlagsGBox)
        self.mergeDirLineEdit.setGeometry(QtCore.QRect(130, 50, 321, 20))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.mergeDirLineEdit.setFont(font)
        self.mergeDirLineEdit.setStyleSheet("QLineEdit{\n"
"    color: rgb(100, 100, 100);\n"
"}\n"
"")
        self.mergeDirLineEdit.setInputMask("")
        self.mergeDirLineEdit.setMaxLength(32767)
        self.mergeDirLineEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.mergeDirLineEdit.setReadOnly(True)
        self.mergeDirLineEdit.setObjectName("mergeDirLineEdit")
        self.findFolderButton = QtWidgets.QPushButton(self.scriptFlagsGBox)
        self.findFolderButton.setGeometry(QtCore.QRect(460, 50, 81, 23))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.findFolderButton.setFont(font)
        self.findFolderButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.findFolderButton.setObjectName("findFolderButton")
        self.label_3 = QtWidgets.QLabel(self.scriptFlagsGBox)
        self.label_3.setGeometry(QtCore.QRect(630, 85, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.mergeModList = QtWidgets.QListWidget(self.mergeTab)
        self.mergeModList.setGeometry(QtCore.QRect(20, 180, 256, 271))
        self.mergeModList.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.mergeModList.setStyleSheet("background: #eafefe")
        self.mergeModList.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.mergeModList.setObjectName("mergeModList")
        self.label_2 = QtWidgets.QLabel(self.mergeTab)
        self.label_2.setGeometry(QtCore.QRect(20, 155, 251, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.mergeNoticeTextEdit = QtWidgets.QTextEdit(self.mergeTab)
        self.mergeNoticeTextEdit.setGeometry(QtCore.QRect(290, 280, 171, 171))
        self.mergeNoticeTextEdit.setStyleSheet("background: #E0E0E0")
        self.mergeNoticeTextEdit.setReadOnly(True)
        self.mergeNoticeTextEdit.setObjectName("mergeNoticeTextEdit")
        self.refreshMergeButton = QtWidgets.QPushButton(self.mergeTab)
        self.refreshMergeButton.setGeometry(QtCore.QRect(294, 200, 161, 61))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.refreshMergeButton.setFont(font)
        self.refreshMergeButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.refreshMergeButton.setObjectName("refreshMergeButton")
        self.previewMergeGroupBox = QtWidgets.QGroupBox(self.mergeTab)
        self.previewMergeGroupBox.setGeometry(QtCore.QRect(480, 140, 275, 321))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.previewMergeGroupBox.setFont(font)
        self.previewMergeGroupBox.setStyleSheet("")
        self.previewMergeGroupBox.setObjectName("previewMergeGroupBox")
        self.previewMergeLabel = QtWidgets.QLabel(self.previewMergeGroupBox)
        self.previewMergeLabel.setGeometry(QtCore.QRect(10, 20, 256, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.previewMergeLabel.setFont(font)
        self.previewMergeLabel.setObjectName("previewMergeLabel")
        self.previewMergeImage = QtWidgets.QGraphicsView(self.previewMergeGroupBox)
        self.previewMergeImage.setGeometry(QtCore.QRect(10, 50, 256, 256))
        self.previewMergeImage.setMinimumSize(QtCore.QSize(256, 0))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.previewMergeImage.setFont(font)
        self.previewMergeImage.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.previewMergeImage.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.previewMergeImage.setObjectName("previewMergeImage")
        self.previewMergeNextButton = QtWidgets.QPushButton(self.previewMergeGroupBox)
        self.previewMergeNextButton.setGeometry(QtCore.QRect(240, 160, 21, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.previewMergeNextButton.setFont(font)
        self.previewMergeNextButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.previewMergeNextButton.setStyleSheet("")
        self.previewMergeNextButton.setObjectName("previewMergeNextButton")
        self.previewMergeBackButton = QtWidgets.QPushButton(self.previewMergeGroupBox)
        self.previewMergeBackButton.setGeometry(QtCore.QRect(15, 160, 21, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.previewMergeBackButton.setFont(font)
        self.previewMergeBackButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.previewMergeBackButton.setStyleSheet("")
        self.previewMergeBackButton.setObjectName("previewMergeBackButton")
        self.tabWidget.addTab(self.mergeTab, "")
        self.logLabel = QtWidgets.QLabel(self.centralwidget)
        self.logLabel.setGeometry(QtCore.QRect(30, 508, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.logLabel.setFont(font)
        self.logLabel.setObjectName("logLabel")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 798, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setSizeGripEnabled(False)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.refreshModsButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Use if you manually changed files in the File Explorer</p></body></html>"))
        self.refreshModsButton.setText(_translate("MainWindow", "Refresh Mod Lists"))
        self.removeModButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Disable Mod(s)</p></body></html>"))
        self.removeModButton.setText(_translate("MainWindow", "⮟"))
        self.enabledModList.setSortingEnabled(True)
        self.disabledModList.setSortingEnabled(True)
        self.disabledLabel.setText(_translate("MainWindow", "DISABLED"))
        self.addModButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Enable Mod(s)</p></body></html>"))
        self.addModButton.setText(_translate("MainWindow", "⮝"))
        self.previewModGroupBox.setTitle(_translate("MainWindow", "Mod Preview"))
        self.previewModLabel.setText(_translate("MainWindow", "Mod Name"))
        self.previewModNextButton.setText(_translate("MainWindow", "▶"))
        self.previewModBackButton.setText(_translate("MainWindow", "◀"))
        self.patchButton.setText(_translate("MainWindow", "Patch"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt;\">Need to patch your game files?<br/>Run the patch!<br/></span><span style=\" font-size:10pt; font-weight:600;\">Note:</span><span style=\" font-size:10pt;\"> Must add the file patch yourself</span></p></body></html>"))
        self.enabledLabel_2.setText(_translate("MainWindow", "ENABLED"))
        self.mergeNoticeTextEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; color:#ff0000;\">Important<br /></span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; color:#000000;\">If you manually moved or rename files in the File Explorer, you may have issues when trying to Enable or Disable a mod. Please press the Refresh Mod Lists button whenever you move or rename files manually.</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.manageTab), _translate("MainWindow", "Manage"))
        self.scriptFlagsGBox.setTitle(_translate("MainWindow", "Script flags"))
        self.reflectionFlagCheckBox.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600; color:#b30000;\">DEPRECATED. DO NOT USE.</span></p><p><span style=\" font-size:10pt;\">Applies reflection fix for 3.0+ characters</span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default:</span><span style=\" font-size:10pt;\"> False</span></p></body></html>"))
        self.reflectionFlagCheckBox.setText(_translate("MainWindow", "--reflection"))
        self.storeFlagCheckBox.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Use to keep the original .ini files enabled after completion.</span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default:</span><span style=\" font-size:10pt;\"> False</span></p></body></html>"))
        self.storeFlagCheckBox.setText(_translate("MainWindow", "--store"))
        self.enabledFlagCheckBox.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Re-enable disabled .ini files</span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default:</span><span style=\" font-size:10pt;\"> False</span></p></body></html>"))
        self.enabledFlagCheckBox.setText(_translate("MainWindow", "--enable"))
        self.swapKeyLineEdit.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600; color:#ff0000;\">REQUIRED</span></p><p><span style=\" font-size:10pt;\">Key to press to switch mods.</span></p><p><span style=\" font-size:10pt;\">Can be set later in the .ini</span></p></body></html>"))
        self.swapKeyLineEdit.setPlaceholderText(_translate("MainWindow", "KEY"))
        self.compressFlagCheckBox.setToolTip(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; font-weight:600; text-decoration: underline; color:#dc9752;\">WARNING</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#000000;\">Difficult to reverse, have backups</span><span style=\" font-size:12pt; font-weight:600; color:#dc9752;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Makes the output mods as small as possible</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default:</span><span style=\" font-size:10pt;\"> </span><span style=\" font-size:10pt;\">False</span></p></body></html>"))
        self.compressFlagCheckBox.setText(_translate("MainWindow", "--compress"))
        self.activeFlagCheckBox.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Only active character gets swapped when swapping.</span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default:</span><span style=\" font-size:10pt;\"/><span style=\" font-size:10pt;\">TRUE</span></p></body></html>"))
        self.activeFlagCheckBox.setText(_translate("MainWindow", "--active"))
        self.swapKeyLabel.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600; color:#ff0000;\">REQUIRED</span></p><p><span style=\" font-size:10pt;\">Key to press to switch mods.</span></p><p><span style=\" font-size:10pt;\">Can be set later in the .ini</span></p></body></html>"))
        self.swapKeyLabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ff0000;\">*</span> Swap Key:</p></body></html>"))
        self.mergeNameLineEdit.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Name of final .ini file</span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default</span><span style=\" font-size:10pt; font-weight:600;\">: </span><span style=\" font-size:10pt;\">&quot;merged.ini&quot;</span></p></body></html>"))
        self.mergeNameLineEdit.setPlaceholderText(_translate("MainWindow", "merged"))
        self.mergeNameLabel.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Name of final .ini file</span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default</span><span style=\" font-size:10pt; font-weight:600;\">:</span><span style=\" font-size:10pt;\"> &quot;merged.ini&quot;</span></p></body></html>"))
        self.mergeNameLabel.setText(_translate("MainWindow", "Merged File Name:"))
        self.mergeSuffixLabel.setText(_translate("MainWindow", ".ini"))
        self.mergeModsButton.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Merge the mods listed below</span></p></body></html>"))
        self.mergeModsButton.setText(_translate("MainWindow", "Merge Mods"))
        self.mergeDirLabel.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ff0000;\">REQUIRED</span></p><p><span style=\" font-size:10pt;\">Location to use to create mod.</span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default:</span><span style=\" font-size:10pt;\"> &quot;.</span></p></body></html>"))
        self.mergeDirLabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ff0000;\">*</span> Location To Merge:</p></body></html>"))
        self.mergeDirLineEdit.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ff0000;\">REQUIRED</span></p><p><span style=\" font-size:10pt;\">Location of mods you want to merge.</span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Default:</span><span style=\" font-size:10pt;\"> &quot;.&quot;</span></p></body></html>"))
        self.mergeDirLineEdit.setPlaceholderText(_translate("MainWindow", "C:/location/of/mods/to/merge"))
        self.findFolderButton.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt;\">Find folder containing mods to merge. <br/></span></p><p><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">Note</span><span style=\" font-size:10pt; font-weight:600;\">: </span><span style=\" font-size:10pt;\">Will look for mods at all depths within the folder</span></p></body></html>"))
        self.findFolderButton.setText(_translate("MainWindow", "Find Folder..."))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ff0000;\">* </span>= REQUIRED</p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "Mods to be merged"))
        self.mergeNoticeTextEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#ff0000;\">IMPORTANT</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">When mods have been loaded, please sort them to the desired order.</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">The merge script will merge mods in the order listed on the left and will cycle in said order (0,1,2,3,4,0,1...etc)</span></p></body></html>"))
        self.refreshMergeButton.setText(_translate("MainWindow", "Refresh List\n"
"AND\n"
"Reset Order"))
        self.previewMergeGroupBox.setTitle(_translate("MainWindow", "Mod Preview"))
        self.previewMergeLabel.setText(_translate("MainWindow", "Mod Name"))
        self.previewMergeNextButton.setText(_translate("MainWindow", "▶"))
        self.previewMergeBackButton.setText(_translate("MainWindow", "◀"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.mergeTab), _translate("MainWindow", "Merge"))
        self.logLabel.setText(_translate("MainWindow", "Log"))
